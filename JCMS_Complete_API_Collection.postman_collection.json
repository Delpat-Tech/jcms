{
  "info": {
    "name": "JCMS Complete API Collection",
    "description": "Comprehensive API testing collection for all roles: SuperAdmin, Admin, Editor, Viewer with all available endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000/api",
      "type": "string"
    },
    {
      "key": "superadmin_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "admin_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "editor_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "viewer_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "test_user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "test_image_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "test_admin_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "test_editor_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "🏥 Health Check",
      "item": [
        {
          "name": "Server Health",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Server is running', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.status).to.equal('ok');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            }
          }
        }
      ]
    },
    {
      "name": "🔐 Authentication",
      "item": [
        {
          "name": "Login SuperAdmin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('superadmin_token', response.token);",
                  "    pm.test('SuperAdmin login successful', () => {",
                  "        pm.expect(response.success).to.be.true;",
                  "        pm.expect(response.token).to.exist;",
                  "    });",
                  "} else {",
                  "    pm.test('SuperAdmin login failed', () => {",
                  "        pm.expect.fail('Login should succeed');",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@system.com\",\n  \"password\": \"admin123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Login Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('admin_token', response.token);",
                  "    pm.test('Admin login successful', () => {",
                  "        pm.expect(response.success).to.be.true;",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"dev.admin@test.com\",\n  \"password\": \"dev123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Login Editor",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('editor_token', response.token);",
                  "    pm.test('Editor login successful', () => {",
                  "        pm.expect(response.success).to.be.true;",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"editor@test.com\",\n  \"password\": \"test123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Login Viewer",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('viewer_token', response.token);",
                  "    pm.test('Viewer login successful', () => {",
                  "        pm.expect(response.success).to.be.true;",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"qa@test.com\",\n  \"password\": \"test123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Try Public Registration (Should Fail)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Public registration is disabled', () => {",
                  "    pm.expect(pm.response.code).to.equal(403);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.false;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"unauthorized_user\",\n  \"email\": \"unauthorized@test.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          }
        }
      ]
    },
    {
      "name": "👑 SuperAdmin - User Management",
      "item": [
        {
          "name": "Create Admin User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('SuperAdmin can create admin user', () => {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                  "    if (pm.response.code === 201) {",
                  "        const response = pm.response.json();",
                  "        pm.collectionVariables.set('test_admin_id', response.data._id);",
                  "        pm.expect(response.data.role.name).to.equal('admin');",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{superadmin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"test_admin_{{$timestamp}}\",\n  \"email\": \"testadmin{{$timestamp}}@test.com\",\n  \"password\": \"password123\",\n  \"role\": \"admin\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          }
        },
        {
          "name": "Create Editor User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('SuperAdmin can create editor user', () => {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                  "    if (pm.response.code === 201) {",
                  "        const response = pm.response.json();",
                  "        pm.collectionVariables.set('test_editor_id', response.data._id);",
                  "        pm.expect(response.data.role.name).to.equal('editor');",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{superadmin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"test_editor_{{$timestamp}}\",\n  \"email\": \"testeditor{{$timestamp}}@test.com\",\n  \"password\": \"password123\",\n  \"role\": \"editor\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          }
        },
        {
          "name": "Create Viewer User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('SuperAdmin can create viewer user', () => {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                  "    if (pm.response.code === 201) {",
                  "        const response = pm.response.json();",
                  "        pm.collectionVariables.set('test_user_id', response.data._id);",
                  "        pm.expect(response.data.role.name).to.equal('viewer');",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{superadmin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"test_viewer_{{$timestamp}}\",\n  \"email\": \"testviewer{{$timestamp}}@test.com\",\n  \"password\": \"password123\",\n  \"role\": \"viewer\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          }
        },
        {
          "name": "Get All Users (Including SuperAdmins)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('SuperAdmin can view all users including superadmins', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data).to.be.an('array');",
                  "    // Should include superadmin users",
                  "    const hasSuperAdmin = response.data.some(user => user.role.name === 'superadmin');",
                  "    pm.expect(hasSuperAdmin).to.be.true;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{superadmin_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          }
        },
        {
          "name": "Get User by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('SuperAdmin can view specific user', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data._id).to.exist;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{superadmin_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/{{test_user_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{test_user_id}}"]
            }
          }
        },
        {
          "name": "Update User Role & Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('SuperAdmin can update user roles', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{superadmin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"role\": \"editor\",\n  \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/{{test_user_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{test_user_id}}"]
            }
          }
        },
        {
          "name": "Get User Images",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('SuperAdmin can view user images', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{superadmin_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/{{test_user_id}}/images",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{test_user_id}}", "images"]
            }
          }
        },
        {
          "name": "Delete User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('SuperAdmin can delete users', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{superadmin_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/{{test_user_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{test_user_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "👑 SuperAdmin - Image Management",
      "item": [
        {
          "name": "Upload Image",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('SuperAdmin can upload images', () => {",
                  "    pm.expect(pm.response.code).to.equal(201);",
                  "    if (pm.response.code === 201) {",
                  "        const response = pm.response.json();",
                  "        pm.collectionVariables.set('test_image_id', response.data._id);",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{superadmin_token}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "image",
                  "type": "file",
                  "src": "test-image.jpg"
                },
                {
                  "key": "title",
                  "value": "SuperAdmin Test Image",
                  "type": "text"
                },
                {
                  "key": "description",
                  "value": "Test image uploaded by superadmin",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/images",
              "host": ["{{baseUrl}}"],
              "path": ["images"]
            }
          }
        },
        {
          "name": "Get All Images",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('SuperAdmin can view all images', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{superadmin_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/images",
              "host": ["{{baseUrl}}"],
              "path": ["images"]
            }
          }
        },
        {
          "name": "Get Bulk Images",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('SuperAdmin can get bulk images', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{superadmin_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/images/bulk",
              "host": ["{{baseUrl}}"],
              "path": ["images", "bulk"]
            }
          }
        },
        {
          "name": "Get Image by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('SuperAdmin can view specific image', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{superadmin_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/images/{{test_image_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["images", "{{test_image_id}}"]
            }
          }
        },
        {
          "name": "Update Image (PUT)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('SuperAdmin can update images', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{superadmin_token}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "title",
                  "value": "Updated SuperAdmin Image",
                  "type": "text"
                },
                {
                  "key": "description",
                  "value": "Updated by superadmin",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/images/{{test_image_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["images", "{{test_image_id}}"]
            }
          }
        },
        {
          "name": "Patch Image",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('SuperAdmin can patch images', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{superadmin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Patched SuperAdmin Image\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/images/{{test_image_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["images", "{{test_image_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "🔧 Admin - User Management",
      "item": [
        {
          "name": "Create Editor User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Admin can create editor user', () => {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                  "    if (pm.response.code === 201) {",
                  "        const response = pm.response.json();",
                  "        pm.collectionVariables.set('test_editor_id', response.data._id);",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"admin_editor_{{$timestamp}}\",\n  \"email\": \"admineditor{{$timestamp}}@test.com\",\n  \"password\": \"password123\",\n  \"role\": \"editor\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          }
        },
        {
          "name": "Create Admin User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Admin can create other admin users', () => {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                  "    if (pm.response.code === 201) {",
                  "        const response = pm.response.json();",
                  "        pm.collectionVariables.set('test_admin_id', response.data._id);",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"admin_admin_{{$timestamp}}\",\n  \"email\": \"adminadmin{{$timestamp}}@test.com\",\n  \"password\": \"password123\",\n  \"role\": \"admin\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          }
        },
        {
          "name": "Try Create SuperAdmin (Should Fail)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Admin cannot create superadmin users', () => {",
                  "    pm.expect(pm.response.code).to.equal(400);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.false;",
                  "    pm.expect(response.message).to.include('Invalid role');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"test_superadmin_{{$timestamp}}\",\n  \"email\": \"testsuperadmin{{$timestamp}}@test.com\",\n  \"password\": \"password123\",\n  \"role\": \"superadmin\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          }
        },
        {
          "name": "Get All Users (Excluding SuperAdmins)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Admin can view all users except superadmins', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data).to.be.an('array');",
                  "    // Verify no superadmin users in response",
                  "    const hasSuperAdmin = response.data.some(user => user.role.name === 'superadmin');",
                  "    pm.expect(hasSuperAdmin).to.be.false;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          }
        },
        {
          "name": "Update User Role",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Admin can update user roles', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"role\": \"admin\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/{{test_editor_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{test_editor_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "🔧 Admin - Image Management",
      "item": [
        {
          "name": "Upload Image via Admin Route",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Admin can upload images via admin route', () => {",
                  "    pm.expect(pm.response.code).to.equal(201);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "image",
                  "type": "file",
                  "src": "test-image.jpg"
                },
                {
                  "key": "title",
                  "value": "Admin Test Image",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/admin/images",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "images"]
            }
          }
        },
        {
          "name": "Get All Images via Admin Route",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Admin can view all images', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/images",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "images"]
            }
          }
        },
        {
          "name": "Update Image via Admin Route",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Admin can update images', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "title",
                  "value": "Updated Admin Image",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/admin/images/{{test_image_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "images", "{{test_image_id}}"]
            }
          }
        },
        {
          "name": "Delete Image via Admin Route",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Admin can delete images', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/images/{{test_image_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "images", "{{test_image_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "📝 Editor - Image Management",
      "item": [
        {
          "name": "Try Access User Management (Should Fail)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Editor cannot access user management', () => {",
                  "    pm.expect(pm.response.code).to.equal(403);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{editor_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          }
        },
        {
          "name": "Try Create User (Should Fail)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Editor cannot create users', () => {",
                  "    pm.expect(pm.response.code).to.equal(403);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{editor_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"test_user\",\n  \"email\": \"testuser@test.com\",\n  \"password\": \"password123\",\n  \"role\": \"viewer\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          }
        },
        {
          "name": "Upload Image",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Editor can upload images', () => {",
                  "    pm.expect(pm.response.code).to.equal(201);",
                  "    if (pm.response.code === 201) {",
                  "        const response = pm.response.json();",
                  "        pm.collectionVariables.set('test_image_id', response.data._id);",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{editor_token}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "image",
                  "type": "file",
                  "src": "test-image.jpg"
                },
                {
                  "key": "title",
                  "value": "Editor Test Image",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/images",
              "host": ["{{baseUrl}}"],
              "path": ["images"]
            }
          }
        },
        {
          "name": "Get Own Images",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Editor can view own images', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{editor_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/images",
              "host": ["{{baseUrl}}"],
              "path": ["images"]
            }
          }
        },
        {
          "name": "Update Own Image",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Editor can update own images', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{editor_token}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "title",
                  "value": "Updated Editor Image",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/images/{{test_image_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["images", "{{test_image_id}}"]
            }
          }
        },
        {
          "name": "Patch Own Image",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Editor can patch own images', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{editor_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"description\": \"Patched by editor\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/images/{{test_image_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["images", "{{test_image_id}}"]
            }
          }
        },
        {
          "name": "Delete Own Image",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Editor can delete own images', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{editor_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/images/{{test_image_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["images", "{{test_image_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "👀 Viewer - Read Only Access",
      "item": [
        {
          "name": "Try Access User Management (Should Fail)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Viewer cannot access user management', () => {",
                  "    pm.expect(pm.response.code).to.equal(403);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{viewer_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          }
        },
        {
          "name": "Try Upload Image (Should Fail)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Viewer cannot upload images', () => {",
                  "    pm.expect(pm.response.code).to.be.oneOf([403, 400]);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{viewer_token}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "image",
                  "type": "file",
                  "src": "test-image.jpg"
                },
                {
                  "key": "title",
                  "value": "Viewer Test Image",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/images",
              "host": ["{{baseUrl}}"],
              "path": ["images"]
            }
          }
        },
        {
          "name": "Get Own Images",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Viewer can view own images', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{viewer_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/images",
              "host": ["{{baseUrl}}"],
              "path": ["images"]
            }
          }
        },
        {
          "name": "Try Access Other User's Image (Should Fail)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Viewer cannot access other users images', () => {",
                  "    pm.expect(pm.response.code).to.equal(403);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{viewer_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/images/{{test_image_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["images", "{{test_image_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "🔒 Security & Cross-Role Tests",
      "item": [
        {
          "name": "Admin Access Editor's Image",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Admin can access any user images', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/images/{{test_image_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["images", "{{test_image_id}}"]
            }
          }
        },
        {
          "name": "SuperAdmin Access Any Image",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('SuperAdmin can access any user images', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{superadmin_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/images/{{test_image_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["images", "{{test_image_id}}"]
            }
          }
        },
        {
          "name": "Editor Try Access Admin Route (Should Fail)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Editor cannot access admin routes', () => {",
                  "    pm.expect(pm.response.code).to.equal(403);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{editor_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/images",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "images"]
            }
          }
        },
        {
          "name": "Viewer Try Access Admin Route (Should Fail)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Viewer cannot access admin routes', () => {",
                  "    pm.expect(pm.response.code).to.equal(403);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{viewer_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/images",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "images"]
            }
          }
        }
      ]
    }
  ]
}